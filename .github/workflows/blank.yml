# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Enables trigger from protobuf monorepo
  repository_dispatch:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # The environment we want to access is "build".
    # I wasn't sure what to name it, since we're not actually deploying code to any environment.
    # Rather, we are simply building protobufs which will get used on all environments.
    environment: build

    if: "!contains(github.event.head_commit.message, 'Auto-generated code')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install the `buf` CLI
      - uses: bufbuild/buf-setup-action@v1

      # Checkout the Protobuf monorepo
      - name: Check out Protobuf monorepo
        uses: actions/checkout@v3
        with:
          ref: main
          repository: openmarketplaceengine/openmarketplaceengine
          path: openmarketplaceengine

      # Compile protobufs
      - uses: ory/build-buf-action@v0
        with:
          bufVersion: v1.3.0
          protocPlugins:
            ts-proto@1.110.2
          bufArgs:
            generate --config openmarketplaceengine/omeapi/buf.yaml --template buf.gen.yaml

      # LIST STUFF
      - name: List after compile
        run: |
          ls -la
          find .

      # Commit auto-generated code
      - name: Commit auto-generated code
        run: |
          git config --global init.defaultBranch main
          git config --global user.name 'Github Actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout "${GITHUB_REF:11}"
          git add gen
          git diff --quiet && git diff --staged --quiet || git commit -am "fix(gen): Auto-generated code"
          git push

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@openmarketplaceengine'
      # Pull the latest code
      - name: Pull latest code
        run: |
          git pull
      - run: npm ci
      - run: npm run semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}